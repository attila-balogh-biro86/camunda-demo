<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd"
             id="toll_pricing_c7_table"
             name="Toll Pricing (Decision Table Only)"
             namespace="http://example.com/toll-pricing/c7/table">

  <!-- Inputs -->
  <inputData id="in_mode" name="mode">
    <variable name="mode" typeRef="string"/>
  </inputData>
  <inputData id="in_current" name="currentRatePerMile">
    <variable name="currentRatePerMile" typeRef="double"/>
  </inputData>
  <inputData id="in_reqInc" name="requestedIncreasePerMile">
    <variable name="requestedIncreasePerMile" typeRef="double"/>
  </inputData>
  <inputData id="in_minutes" name="minutesSinceLastIncrease">
    <variable name="minutesSinceLastIncrease" typeRef="integer"/>
  </inputData>
  <inputData id="in_maxStep" name="maxIncreasePerStep">
    <variable name="maxIncreasePerStep" typeRef="double"/>
  </inputData>
  <inputData id="in_minInterval" name="minIntervalMinutes">
    <variable name="minIntervalMinutes" typeRef="integer"/>
  </inputData>
  <inputData id="in_softCap" name="softCapPerMile">
    <variable name="softCapPerMile" typeRef="double"/>
  </inputData>
  <inputData id="in_segCap" name="segmentCap">
    <variable name="segmentCap" typeRef="double"/>
  </inputData>
  <inputData id="in_segLen" name="segmentLengthMiles">
    <variable name="segmentLengthMiles" typeRef="double"/>
  </inputData>

  <!-- Single decision using ONE decision table -->
  <decision id="NewRatePerMile" name="NewRatePerMile">
    <!-- variable required on decision table decisions -->
    <variable name="NewRatePerMile" typeRef="double"/>

    <informationRequirement><requiredInput href="#in_mode"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_current"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_reqInc"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_minutes"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_maxStep"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_minInterval"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_softCap"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_segCap"/></informationRequirement>
    <informationRequirement><requiredInput href="#in_segLen"/></informationRequirement>

    <decisionTable id="dt_newrate" hitPolicy="FIRST">
      <!-- Inputs (no <label> to satisfy schema) -->
      <input id="dt_mode">
        <inputExpression id="dt_mode_expr" typeRef="string"><text>mode</text></inputExpression>
      </input>
      <input id="dt_insideCooldown">
        <inputExpression id="dt_insideCooldown_expr" typeRef="boolean">
          <text>minutesSinceLastIncrease &lt; minIntervalMinutes</text>
        </inputExpression>
      </input>
      <input id="dt_aboveStepCap">
        <inputExpression id="dt_aboveStepCap_expr" typeRef="boolean">
          <text>requestedIncreasePerMile &gt; maxIncreasePerStep</text>
        </inputExpression>
      </input>

      <!-- Single output: the final NewRatePerMile -->
      <output id="dt_out_rate" name="NewRatePerMile" typeRef="double"/>

      <!-- R1: Mandatory mode: ignore per-step & soft cap; enforce segment cap if present -->
      <rule id="r1_mandatory">
        <inputEntry id="r1_c1"><text>"Mandatory"</text></inputEntry>
        <inputEntry id="r1_c2"><text>-</text></inputEntry>
        <inputEntry id="r1_c3"><text>-</text></inputEntry>
        <outputEntry id="r1_o">
          <text>
            if (segmentLengthMiles = null or segmentLengthMiles &lt;= 0)
            then currentRatePerMile + requestedIncreasePerMile
            else min(currentRatePerMile + requestedIncreasePerMile, segmentCap / segmentLengthMiles)
          </text>
        </outputEntry>
      </rule>

      <!-- R2: Normal + inside cooldown + above step cap => clamp to max step; then soft cap; then segment cap -->
      <rule id="r2_norm_cool_above">
        <inputEntry id="r2_c1"><text>"Normal"</text></inputEntry>
        <inputEntry id="r2_c2"><text>true</text></inputEntry>
        <inputEntry id="r2_c3"><text>true</text></inputEntry>
        <outputEntry id="r2_o">
          <text>
            if (segmentLengthMiles = null or segmentLengthMiles &lt;= 0)
            then min(currentRatePerMile + maxIncreasePerStep, softCapPerMile)
            else min(min(currentRatePerMile + maxIncreasePerStep, softCapPerMile), segmentCap / segmentLengthMiles)
          </text>
        </outputEntry>
      </rule>

      <!-- R3: Normal + inside cooldown + NOT above step cap => allow requested; then soft cap; then segment cap -->
      <rule id="r3_norm_cool_ok">
        <inputEntry id="r3_c1"><text>"Normal"</text></inputEntry>
        <inputEntry id="r3_c2"><text>true</text></inputEntry>
        <inputEntry id="r3_c3"><text>false</text></inputEntry>
        <outputEntry id="r3_o">
          <text>
            if (segmentLengthMiles = null or segmentLengthMiles &lt;= 0)
            then min(currentRatePerMile + requestedIncreasePerMile, softCapPerMile)
            else min(min(currentRatePerMile + requestedIncreasePerMile, softCapPerMile), segmentCap / segmentLengthMiles)
          </text>
        </outputEntry>
      </rule>

      <!-- R4: Normal + OUTSIDE cooldown => allow requested; then soft cap; then segment cap -->
      <rule id="r4_norm_outside">
        <inputEntry id="r4_c1"><text>"Normal"</text></inputEntry>
        <inputEntry id="r4_c2"><text>false</text></inputEntry>
        <inputEntry id="r4_c3"><text>-</text></inputEntry>
        <outputEntry id="r4_o">
          <text>
            if (segmentLengthMiles = null or segmentLengthMiles &lt;= 0)
            then min(currentRatePerMile + requestedIncreasePerMile, softCapPerMile)
            else min(min(currentRatePerMile + requestedIncreasePerMile, softCapPerMile), segmentCap / segmentLengthMiles)
          </text>
        </outputEntry>
      </rule>

    </decisionTable>
  </decision>
</definitions>
